{
	"info": {
		"_postman_id": "f9cc8548-5c01-4e52-98b8-2d9ac3e77c69",
		"name": "Tyk Gateway API Collection",
		"description": "![alt text](https://tyk.io/wp-content/uploads/2019/08/2019-07-30-Website-Banner-WebRes-1-384x255.png \"Tyk logo - OSS Gateway\")\n\nThe Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.\n\nSee [Tyk Docs](https://tyk.io/docs/) for full Tyk documentation.\n\n**Warning: Under no circumstances should outside parties be granted access to this API.**\n\nThe Tyk Gateway API is capable of:\n\n* Managing session objects (key generation)\n* Managing and listing API Definitions (only when not using the Dashboard)\n* Hot reloads / reloading a cluster configuration\n* OAuth client creation (only when not using the Dashboard)\n\n\nIn order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.\n\nThe shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:\n\n```\nx-tyk-authorization: <tyk-gateway-secret>\n```\n<br/>\n<b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "tyk",
			"item": [
				{
					"name": "apis",
					"item": [
						{
							"name": "{api ID}",
							"item": [
								{
									"name": "get Api",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tyk/apis/:apiID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"apis",
												":apiID"
											],
											"variable": [
												{
													"key": "apiID",
													"value": "quis Duis",
													"description": "(Required) The API ID"
												}
											]
										},
										"description": "Get API definition\nOnly if used without the Tyk Dashboard"
									},
									"response": [
										{
											"name": "API definition",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tyk/apis/:apiID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"apis",
														":apiID"
													],
													"variable": [
														{
															"key": "apiID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"TestAPI\",\n \"use_keyless\": true,\n \"active\": true,\n \"proxy\": {\n  \"listen_path\": \"/test\"\n }\n}"
										}
									]
								},
								{
									"name": "update Api",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"TestAPI\",\n    \"use_keyless\": true,\n    \"active\": true,\n    \"proxy\": {\n        \"listen_path\": \"/test\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/apis/:apiID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"apis",
												":apiID"
											],
											"variable": [
												{
													"key": "apiID",
													"value": "quis Duis",
													"description": "(Required) The API ID"
												}
											]
										},
										"description": "Updating an API definition uses the same signature an object as a `POST`, however it will first ensure that the API ID that is being updated is the same as the one in the object being `PUT`.\n\n\nUpdating will completely replace the file descriptor and will not change an API Definition that has already been loaded, the hot-reload endpoint will need to be called to push the new definition to live.\n"
									},
									"response": [
										{
											"name": "API updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"TestAPI\",\n    \"use_keyless\": true,\n    \"active\": true,\n    \"proxy\": {\n        \"listen_path\": \"/test\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/apis/:apiID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"apis",
														":apiID"
													],
													"variable": [
														{
															"key": "apiID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"status\": \"ok\",\n \"action\": \"updated\",\n \"key\": \"{...API JSON definition...}\"\n}"
										},
										{
											"name": "Malformed data",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"TestAPI\",\n    \"use_keyless\": true,\n    \"active\": true,\n    \"proxy\": {\n        \"listen_path\": \"/test\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/apis/:apiID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"apis",
														":apiID"
													],
													"variable": [
														{
															"key": "apiID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"status\": \"error\",\n \"message\": \"Malformed API data\"\n}"
										}
									]
								},
								{
									"name": "delete Api",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tyk/apis/:apiID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"apis",
												":apiID"
											],
											"variable": [
												{
													"key": "apiID",
													"value": "quis Duis",
													"description": "(Required) The API ID"
												}
											]
										},
										"description": "Deleting an API definition will remove the file from the file store, the API definition will NOT be unloaded, a separate reload request will need to be made to disable the API endpoint."
									},
									"response": [
										{
											"name": "API deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tyk/apis/:apiID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"apis",
														":apiID"
													],
													"variable": [
														{
															"key": "apiID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"API deleted\",\n \"status\": \"ok\"\n}"
										},
										{
											"name": "No API ID specified",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tyk/apis/:apiID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"apis",
														":apiID"
													],
													"variable": [
														{
															"key": "apiID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"API ID not specified\",\n \"status\": \"error\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "list Apis",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tyk/apis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"apis"
									]
								},
								"description": "List APIs\n Only if used without the Tyk Dashboard"
							},
							"response": [
								{
									"name": "List of API definitions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tyk/apis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"apis"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"TestAPI\",\n  \"use_keyless\": true,\n  \"active\": true,\n  \"proxy\": {\n   \"listen_path\": \"/test\"\n  }\n }\n]"
								}
							]
						},
						{
							"name": "create Api",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"TestAPI\",\n    \"use_keyless\": true,\n    \"active\": true,\n    \"proxy\": {\n        \"listen_path\": \"/test\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tyk/apis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"apis"
									]
								},
								"description": "Create API\n A single Tyk node can have its API Definitions queried, deleted and updated remotely. This functionality enables you to remotely update your Tyk definitions without having to manage the files manually."
							},
							"response": [
								{
									"name": "API created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"TestAPI\",\n    \"use_keyless\": true,\n    \"active\": true,\n    \"proxy\": {\n        \"listen_path\": \"/test\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/apis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"apis"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": \"ok\",\n \"action\": \"created\",\n \"key\": \"{...API JSON definition...}\"\n}"
								},
								{
									"name": "Malformed data",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"TestAPI\",\n    \"use_keyless\": true,\n    \"active\": true,\n    \"proxy\": {\n        \"listen_path\": \"/test\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/apis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"apis"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": \"error\",\n \"message\": \"Malformed API data\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "reload",
					"item": [
						{
							"name": "Hot-reload a single node",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tyk/reload/?block=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"reload",
										""
									],
									"query": [
										{
											"key": "block",
											"value": "true",
											"description": "Block a response, until the reload is performed. This can be useful in scripting environments like CI/CD workflows."
										}
									]
								},
								"description": "Tyk is capable of reloading configurations without having to stop serving requests, this means that API configurations can be added at runtime, or even modified at runtime and those rules applied immediately without any downtime."
							},
							"response": [
								{
									"name": "Reload gateway",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tyk/reload/?block=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"reload",
												""
											],
											"query": [
												{
													"key": "block",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": \"ok\"\n}"
								}
							]
						},
						{
							"name": "Hot-reload a Tyk group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tyk/reload/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"reload",
										"group"
									]
								},
								"description": "To reload a whole group of Tyk nodes (without using the Dashboard or host manager), you can send an API request to a single node, this node will then send a notification through the pub/sub infrastructure to all other listening nodes (including the host manager if it is being used to manage NginX) which will then trigger a global reload."
							},
							"response": [
								{
									"name": "Reload gateway",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tyk/reload/group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"reload",
												"group"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": \"ok\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "keys",
					"item": [
						{
							"name": "{key ID}",
							"item": [
								{
									"name": "Get a Key",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tyk/keys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"keys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "quis Duis",
													"description": "(Required) The Key ID"
												}
											]
										},
										"description": "Get session info about the specified key. Should return up to date rate limit and quota usage numbers."
									},
									"response": [
										{
											"name": "Key object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tyk/keys/:keyID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"keys",
														":keyID"
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"quota_max\": 60,\n \"quota_renews\": 1406121006,\n \"quota_renewal_rate\": 60,\n \"allowance\": 100,\n \"rate\": 100,\n \"per\": 5,\n \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
										}
									]
								},
								{
									"name": "Update Key",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/keys/:keyID?suppress_reset=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"keys",
												":keyID"
											],
											"query": [
												{
													"key": "suppress_reset",
													"value": "1",
													"description": "Adding the suppress_reset parameter and setting it to 1, will cause Tyk not to reset the quota limit that is in the current live quota manager. By default Tyk will reset the quota in the live quota manager (initialising it) when adding a key. Adding the `suppress_reset` flag to the URL parameters will avoid this behaviour."
												}
											],
											"variable": [
												{
													"key": "keyID",
													"value": "quis Duis",
													"description": "(Required) The Key ID"
												}
											]
										},
										"description": "You can also manually add keys to Tyk using your own key-generation algorithm. It is recommended if using this approach to ensure that the OrgID being used in the API Definition and the key data is blank so that Tyk does not try to prepend or manage the key in any way."
									},
									"response": [
										{
											"name": "Key updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/keys/:keyID?suppress_reset=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"keys",
														":keyID"
													],
													"query": [
														{
															"key": "suppress_reset",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"updated\",\n \"status\": \"ok\"\n}"
										},
										{
											"name": "No or incorrect Key ID specified",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/keys/:keyID?suppress_reset=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"keys",
														":keyID"
													],
													"query": [
														{
															"key": "suppress_reset",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Key ID not specified\",\n \"status\": \"error\"\n}"
										}
									]
								},
								{
									"name": "Create Custom Key / Import Key",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/keys/:keyID?suppress_reset=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"keys",
												":keyID"
											],
											"query": [
												{
													"key": "suppress_reset",
													"value": "1",
													"description": "Adding the suppress_reset parameter and setting it to 1, will cause Tyk not to reset the quota limit that is in the current live quota manager. By default Tyk will reset the quota in the live quota manager (initialising it) when adding a key. Adding the `suppress_reset` flag to the URL parameters will avoid this behaviour."
												}
											],
											"variable": [
												{
													"key": "keyID",
													"value": "quis Duis",
													"description": "(Required) The Key ID"
												}
											]
										},
										"description": "You can use the `POST /tyk/keys/{KEY_ID}` endpoint as defined below to import existing keys into Tyk.\n\nThis example uses standard `authorization` header authentication, and assumes that the Gateway is located at `127.0.0.1:8080` and the Tyk secret is `352d20ee67be67f6340b4c0605b044b7` - update these as necessary to match your environment.\n\nTo import a key called `mycustomkey`, save the JSON contents as `token.json` (see example below), then run the following Curl command.\n\n```\ncurl http://127.0.0.1:8080/tyk/keys/mycustomkey -H 'x-tyk-authorization: 352d20ee67be67f6340b4c0605b044b7' -H 'Content-Type: application/json'  -d @token.json\n```\n\nThe following request will fail as the key doesn't exist.\n\n```\ncurl http://127.0.0.1:8080/quickstart/headers -H 'Authorization. invalid123'\n```\n\nBut this request will now work, using the imported key.\n\n```\ncurl http://127.0.0.1:8080/quickstart/headers -H 'Authorization: mycustomkey'\n```\n\n<h4>Example token.json file<h4>\n\n```\n{\n  \"allowance\": 1000,\n  \"rate\": 1000,\n  \"per\": 60,\n  \"expires\": -1,\n  \"quota_max\": -1,\n  \"quota_renews\": 1406121006,\n  \"quota_remaining\": 0,\n  \"quota_renewal_rate\": 60,\n  \"access_rights\": {\n    \"3\": {\n      \"api_name\": \"Tyk Test API\",\n      \"api_id\": \"3\"\n    }\n  },\n  \"org_id\": \"53ac07777cbb8c2d53000002\",\n  \"basic_auth_data\": {\n    \"password\": \"\",\n    \"hash_type\": \"\"\n  },\n  \"hmac_enabled\": false,\n  \"hmac_string\": \"\",\n  \"is_inactive\": false,\n  \"apply_policy_id\": \"\",\n  \"apply_policies\": [\n    \"59672779fa4387000129507d\",\n    \"53222349fa4387004324324e\",\n    \"543534s9fa4387004324324d\"\n    ],\n  \"monitor\": {\n    \"trigger_limits\": []\n  }\n}\n```"
									},
									"response": [
										{
											"name": "Key updated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/keys/:keyID?suppress_reset=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"keys",
														":keyID"
													],
													"query": [
														{
															"key": "suppress_reset",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"updated\",\n \"status\": \"ok\"\n}"
										},
										{
											"name": "No or incorrect Key ID specified",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/keys/:keyID?suppress_reset=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"keys",
														":keyID"
													],
													"query": [
														{
															"key": "suppress_reset",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Key ID not specified\",\n \"status\": \"error\"\n}"
										}
									]
								},
								{
									"name": "Delete Key",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tyk/keys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"keys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "quis Duis",
													"description": "(Required) The Key ID"
												}
											]
										},
										"description": "Deleting a key will remove it permanently from the system, however analytics relating to that key will still be available."
									},
									"response": [
										{
											"name": "Key deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tyk/keys/:keyID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"keys",
														":keyID"
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"Key deleted\",\n \"status\": \"ok\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Keys",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tyk/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"keys"
									]
								},
								"description": "You can retrieve all the keys in your Tyk instance. Returns an array of Key IDs."
							},
							"response": [
								{
									"name": "List of all API keys",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tyk/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"keys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n \"enim tempor ullamco adipisicing\",\n \"fugiat culpa\"\n]"
								}
							]
						},
						{
							"name": "Create a key",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tyk/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"keys"
									]
								},
								"description": "Tyk will generate the access token based on the OrgID specified in the API Definition and a random UUID. This ensures that keys can be \"owned\" by different API Owners should segmentation be needed at an organisational level.\n<br/><br/>\nAPI keys without access_rights data will be written to all APIs on the system (this also means that they will be created across all SessionHandlers and StorageHandlers, it is recommended to always embed access_rights data in a key to ensure that only targeted APIs and their back-ends are written to."
							},
							"response": [
								{
									"name": "New Key added",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"keys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"action\": \"created\",\n \"key\": \"{...KEY JSON definition...}\",\n \"status\": \"ok\"\n}"
								},
								{
									"name": "Malformed data",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"keys"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Malformed Key data\",\n \"status\": \"error\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "oauth",
					"item": [
						{
							"name": "clients",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Create new OAuth client",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"client_id\": \"test\",\n    \"api_id\": \"id\",\n    \"policy_id\": \"policy\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/oauth/clients/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"oauth",
														"clients",
														"create"
													]
												},
												"description": "Any OAuth keys must be generated with the help of a client ID. These need to be pre-registered with Tyk before they can be used (in a similar vein to how you would register your app with Twitter before attempting to ask user permissions using their API). <br/><br/> <h3>Creating OAuth clients with Access to Multiple APIs</h3> New from Tyk Gateway 2.6.0 is the ability to create OAuth clients with access to more than one API. If you provide the api_id it works the same as in previous releases. If you donÂ¿Ã¯t provide the api_id the request uses policy access rights and enumerates APIs from their setting in the newly created OAuth-client."
											},
											"response": [
												{
													"name": "Client created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Tyk-Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"client_id\": \"test\",\n    \"api_id\": \"id\",\n    \"policy_id\": \"policy\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/tyk/oauth/clients/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tyk",
																"oauth",
																"clients",
																"create"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"client_id\": \"test\",\n \"api_id\": \"id\",\n \"policy_id\": \"policy\"\n}"
												}
											]
										},
										{
											"name": "Update OAuth metadata and Policy ID",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/tyk/oauth/clients/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"oauth",
														"clients",
														"create"
													],
													"variable": [
														{
															"key": "apiID",
															"value": "quis Duis",
															"description": "(Required) The API ID"
														}
													]
												},
												"description": "Allows you to update the metadata and Policy ID for an OAuth client."
											},
											"response": [
												{
													"name": "OAuth client metadata updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Tyk-Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tyk/oauth/clients/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tyk",
																"oauth",
																"clients",
																"create"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"api_id\": \"dolore eu\",\n  \"client_id\": \"est nostrud\",\n  \"description\": \"qui nostrud laboris\",\n  \"meta_data\": {},\n  \"policy_id\": \"veniam anim aliqua\",\n  \"redirect_uri\": \"est ea Lorem\",\n  \"secret\": \"dolor velit sint dolore ut\"\n },\n {\n  \"api_id\": \"exercitation id\",\n  \"client_id\": \"culpa\",\n  \"description\": \"nostrud Duis magn\",\n  \"meta_data\": {},\n  \"policy_id\": \"exercitation qui nulla\",\n  \"redirect_uri\": \"tempor\",\n  \"secret\": \"exercitation dolore adipisicing\"\n }\n]"
												}
											]
										}
									]
								},
								{
									"name": "{api ID}",
									"item": [
										{
											"name": "{key Name}",
											"item": [
												{
													"name": "Get OAuth client",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/tyk/oauth/clients/:apiID/:keyName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tyk",
																"oauth",
																"clients",
																":apiID",
																":keyName"
															],
															"variable": [
																{
																	"key": "apiID",
																	"value": "ullamco mollit labore",
																	"description": "(Required) The API ID"
																},
																{
																	"key": "keyName",
																	"value": "quis Duis",
																	"description": "(Required) The Client ID"
																}
															]
														}
													},
													"response": [
														{
															"name": "Get OAuth client details or a list of OAuth clients",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Tyk-Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tyk/oauth/clients/:apiID/:keyName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tyk",
																		"oauth",
																		"clients",
																		":apiID",
																		":keyName"
																	],
																	"variable": [
																		{
																			"key": "apiID"
																		},
																		{
																			"key": "keyName"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"client_id\": \"test\",\n \"api_id\": \"id\",\n \"policy_id\": \"policy\"\n}"
														}
													]
												},
												{
													"name": "Delete OAuth client",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/tyk/oauth/clients/:apiID/:keyName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tyk",
																"oauth",
																"clients",
																":apiID",
																":keyName"
															],
															"variable": [
																{
																	"key": "apiID",
																	"value": "ullamco mollit labore",
																	"description": "(Required) The API ID"
																},
																{
																	"key": "keyName",
																	"value": "quis Duis",
																	"description": "(Required) The Client ID"
																}
															]
														},
														"description": "Please note that tokens issued with the client ID will still be valid until they expire."
													},
													"response": [
														{
															"name": "OAuth client deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Tyk-Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tyk/oauth/clients/:apiID/:keyName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tyk",
																		"oauth",
																		"clients",
																		":apiID",
																		":keyName"
																	],
																	"variable": [
																		{
																			"key": "apiID"
																		},
																		{
																			"key": "keyName"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"action\": \"deleted\",\n \"status\": \"ok\"\n}"
														}
													]
												},
												{
													"name": "List tokens",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/tyk/oauth/clients/:apiID/:keyName/tokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tyk",
																"oauth",
																"clients",
																":apiID",
																":keyName",
																"tokens"
															],
															"variable": [
																{
																	"key": "apiID",
																	"value": "ullamco mollit labore",
																	"description": "(Required) The API ID"
																},
																{
																	"key": "keyName",
																	"value": "quis Duis",
																	"description": "(Required) The Client ID"
																}
															]
														},
														"description": "This endpoint allows you to retrieve a list of all current tokens and their expiry date for a provided API ID and OAuth-client ID in the following format. This endpoint will work only for newly created tokens. <br/> <br/> You can control how long you want to store expired tokens in this list using `oauth_token_expired_retain_period` gateway option, which specifies retain period for expired tokens stored in Redis. By default expired token not get removed. See <a href=\"https://tyk.io/docs/configure/tyk-gateway-configuration-options/#a-name-oauth-token-expired-retain-period-a-oauth-token-expired-retain-period\" target=\"_blank\">here</a> for more details."
													},
													"response": [
														{
															"name": "Get a list of tokens",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Tyk-Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tyk/oauth/clients/:apiID/:keyName/tokens",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tyk",
																		"oauth",
																		"clients",
																		":apiID",
																		":keyName",
																		"tokens"
																	],
																	"variable": [
																		{
																			"key": "apiID"
																		},
																		{
																			"key": "keyName"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n \"tok1\",\n \"tok2\"\n]"
														}
													]
												}
											]
										},
										{
											"name": "List oAuth clients",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/tyk/oauth/clients/:apiID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"oauth",
														"clients",
														":apiID"
													],
													"variable": [
														{
															"key": "apiID",
															"value": "quis Duis",
															"description": "(Required) The API ID"
														}
													]
												},
												"description": "OAuth Clients are organised by API ID, and therefore are queried as such."
											},
											"response": [
												{
													"name": "Get OAuth client details or a list of OAuth clients",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Tyk-Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tyk/oauth/clients/:apiID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tyk",
																"oauth",
																"clients",
																":apiID"
															],
															"variable": [
																{
																	"key": "apiID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"api_id\": \"dolore eu\",\n  \"client_id\": \"est nostrud\",\n  \"description\": \"qui nostrud laboris\",\n  \"meta_data\": {},\n  \"policy_id\": \"veniam anim aliqua\",\n  \"redirect_uri\": \"est ea Lorem\",\n  \"secret\": \"dolor velit sint dolore ut\"\n },\n {\n  \"api_id\": \"exercitation id\",\n  \"client_id\": \"culpa\",\n  \"description\": \"nostrud Duis magn\",\n  \"meta_data\": {},\n  \"policy_id\": \"exercitation qui nulla\",\n  \"redirect_uri\": \"tempor\",\n  \"secret\": \"exercitation dolore adipisicing\"\n }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "authorize-client",
							"item": [
								{
									"name": "Authorize client",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "response_type",
													"value": "code",
													"description": "Should be provided by requesting client as part of authorisation request, this should be either `code` or `token` depending on the methods you have specified for the API."
												},
												{
													"key": "client_id",
													"value": "21e2baf424674f6461faca6d45285bbb",
													"description": "Should be provided by requesting client as part of authorisation request. The Client ID that is making the request."
												},
												{
													"key": "redirect_uri",
													"value": "http%3A%2F%2Foauth.com%2Fredirect",
													"description": "Should be provided by requesting client as part of authorisation request. Must match with the record stored with Tyk."
												},
												{
													"key": "key_rules",
													"value": "%7B+++++%22allowance%22%3A+999%2C+++++%22rate%22%3A+1000%2C+++++%22per%22%3A+60%2C+++++%22expires%22%3A+0%2C+++++%22quota_max%22%3A+-1%2C+++++%22quota_renews%22%3A+1406121006%2C+++++%22quota_remaining%22%3A+0%2C+++++%22quota_renewal_rate%22%3A+60%2C+++++%22access_rights%22%3A+%7B+++++++++%22528a67c1ac9940964f9a41ae79235fcc%22%3A+%7B+++++++++++++%22api_name%22%3A+%22OAuth+Test+API%22%2C+++++++++++++%22api_id%22%3A+%22528a67c1ac9940964f9a41ae79235fcc%22%2C+++++++++++++%22versions%22%3A+%5B+++++++++++++++++%22Default%22+++++++++++++%5D+++++++++%7D+++++%7D%2C+++++%22org_id%22%3A+%2253ac07777cbb8c2d53000002%22+%7D",
													"description": "A string representation of a Session Object (form-encoded). This should be provided by your application in order to apply any quotas or rules to the key."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/oauth/authorize-client/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"oauth",
												"authorize-client",
												""
											]
										},
										"description": "With the OAuth flow you will need to create authorisation or access tokens for your clients, in order to do this, Tyk provides a private API endpoint for your application to generate these codes and redirect the end-user back to the API Client."
									},
									"response": [
										{
											"name": "Succesful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "response_type",
															"value": "code",
															"description": "Should be provided by requesting client as part of authorisation request, this should be either `code` or `token` depending on the methods you have specified for the API."
														},
														{
															"key": "client_id",
															"value": "21e2baf424674f6461faca6d45285bbb",
															"description": "Should be provided by requesting client as part of authorisation request. The Client ID that is making the request."
														},
														{
															"key": "redirect_uri",
															"value": "http%3A%2F%2Foauth.com%2Fredirect",
															"description": "Should be provided by requesting client as part of authorisation request. Must match with the record stored with Tyk."
														},
														{
															"key": "key_rules",
															"value": "%7B+++++%22allowance%22%3A+999%2C+++++%22rate%22%3A+1000%2C+++++%22per%22%3A+60%2C+++++%22expires%22%3A+0%2C+++++%22quota_max%22%3A+-1%2C+++++%22quota_renews%22%3A+1406121006%2C+++++%22quota_remaining%22%3A+0%2C+++++%22quota_renewal_rate%22%3A+60%2C+++++%22access_rights%22%3A+%7B+++++++++%22528a67c1ac9940964f9a41ae79235fcc%22%3A+%7B+++++++++++++%22api_name%22%3A+%22OAuth+Test+API%22%2C+++++++++++++%22api_id%22%3A+%22528a67c1ac9940964f9a41ae79235fcc%22%2C+++++++++++++%22versions%22%3A+%5B+++++++++++++++++%22Default%22+++++++++++++%5D+++++++++%7D+++++%7D%2C+++++%22org_id%22%3A+%2253ac07777cbb8c2d53000002%22+%7D",
															"description": "A string representation of a Session Object (form-encoded). This should be provided by your application in order to apply any quotas or rules to the key."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/oauth/authorize-client/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"oauth",
														"authorize-client",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"MWY0ZDRkMzktOTYwNi00NDRiLTk2YmQtOWQxOGQ3Mjc5Yzdk\",\n \"redirect_to\": \"http://client-app.com/oauth-redirect/?code=MWY0ZDRkMzktOTYwNi00NDRiLTk2YmQtOWQxOGQ3Mjc5Yzdk\"\n}"
										}
									]
								},
								{
									"name": "Update OAuth metadata",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tyk/oauth/authorize-client/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"oauth",
												"authorize-client",
												""
											],
											"variable": [
												{
													"key": "apiID",
													"value": "quis Duis",
													"description": "(Required) The API ID"
												}
											]
										},
										"description": "Allows you to update the metadata for an OAuth client."
									},
									"response": [
										{
											"name": "OAuth client metadata updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tyk/oauth/authorize-client/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"oauth",
														"authorize-client",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"api_id\": \"dolore eu\",\n  \"client_id\": \"est nostrud\",\n  \"description\": \"qui nostrud laboris\",\n  \"meta_data\": {},\n  \"policy_id\": \"veniam anim aliqua\",\n  \"redirect_uri\": \"est ea Lorem\",\n  \"secret\": \"dolor velit sint dolore ut\"\n },\n {\n  \"api_id\": \"exercitation id\",\n  \"client_id\": \"culpa\",\n  \"description\": \"nostrud Duis magn\",\n  \"meta_data\": {},\n  \"policy_id\": \"exercitation qui nulla\",\n  \"redirect_uri\": \"tempor\",\n  \"secret\": \"exercitation dolore adipisicing\"\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "revoke token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "token",
											"value": "eyJvcmciOiI1ZTIwOTFjNGQ0YWVmY2U2MGMwNGZiOTIiLCJpZCI6ImJlMjlhYjVkODc1OTRhZDJhYTBhNjAwNzFlNzE1ZmQxIiwiaCI6Im11cm11cjY0In0=",
											"description": "token to be revoked"
										},
										{
											"key": "client_id",
											"value": "411f0800957c4a3e81fe181141dbc22a",
											"description": "id of oauth client"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/tyk/oauth/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"oauth",
										"revoke"
									]
								},
								"description": "revoke a single token"
							},
							"response": [
								{
									"name": "Succesful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "eyJvcmciOiI1ZTIwOTFjNGQ0YWVmY2U2MGMwNGZiOTIiLCJpZCI6ImJlMjlhYjVkODc1OTRhZDJhYTBhNjAwNzFlNzE1ZmQxIiwiaCI6Im11cm11cjY0In0=",
													"description": "token to be revoked"
												},
												{
													"key": "client_id",
													"value": "411f0800957c4a3e81fe181141dbc22a",
													"description": "id of oauth client"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/oauth/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"oauth",
												"revoke"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "revoke all client's tokens",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "411f0800957c4a3e81fe181141dbc22a",
											"description": "id of oauth client"
										},
										{
											"key": "client_secret",
											"value": "N2Y0YjgzMjctMTEwNi00YWExLWJjM2MtYjg1NWZhM2M1NmNj",
											"description": "oauth client secret to ensure that its a valid operation"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/tyk/oauth/revoke_all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"oauth",
										"revoke_all"
									]
								},
								"description": "revoke all the tokens for a given oauth client"
							},
							"response": [
								{
									"name": "Succesful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "411f0800957c4a3e81fe181141dbc22a",
													"description": "id of oauth client"
												},
												{
													"key": "client_secret",
													"value": "N2Y0YjgzMjctMTEwNi00YWExLWJjM2MtYjg1NWZhM2M1NmNj",
													"description": "oauth client secret to ensure that its a valid operation"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/oauth/revoke_all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"oauth",
												"revoke_all"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request, form malformed or client secret and client id doesn't match",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "411f0800957c4a3e81fe181141dbc22a",
													"description": "id of oauth client"
												},
												{
													"key": "client_secret",
													"value": "N2Y0YjgzMjctMTEwNi00YWExLWJjM2MtYjg1NWZhM2M1NmNj",
													"description": "oauth client secret to ensure that its a valid operation"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/oauth/revoke_all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"oauth",
												"revoke_all"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "oauth client doesn't have any api related",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "411f0800957c4a3e81fe181141dbc22a",
													"description": "id of oauth client"
												},
												{
													"key": "client_secret",
													"value": "N2Y0YjgzMjctMTEwNi00YWExLWJjM2MtYjg1NWZhM2M1NmNj",
													"description": "oauth client secret to ensure that its a valid operation"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/oauth/revoke_all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"oauth",
												"revoke_all"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Invalidate OAuth refresh token",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tyk/oauth/refresh/:keyName?api_id=quis Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"oauth",
										"refresh",
										":keyName"
									],
									"query": [
										{
											"key": "api_id",
											"value": "quis Duis",
											"description": "(Required) The API id"
										}
									],
									"variable": [
										{
											"key": "keyName",
											"value": "quis Duis",
											"description": "(Required) Refresh token"
										}
									]
								},
								"description": "It is possible to invalidate refresh tokens in order to manage OAuth client access more robustly."
							},
							"response": [
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tyk/oauth/refresh/:keyName?api_id=quis Duis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"oauth",
												"refresh",
												":keyName"
											],
											"query": [
												{
													"key": "api_id",
													"value": "quis Duis"
												}
											],
											"variable": [
												{
													"key": "keyName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"action\": \"dolore reprehenderit qui\",\n \"key\": \"fugiat \",\n \"key_hash\": \"occaecat amet\",\n \"status\": \"eu consectetur dolor\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "org/keys",
					"item": [
						{
							"name": "{key ID}",
							"item": [
								{
									"name": "Get an Organisation Key",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tyk/org/keys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"org",
												"keys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "quis Duis",
													"description": "(Required) The Key ID"
												}
											]
										},
										"description": "Get session info about specified orgnanisation key. Should return up to date rate limit and quota usage numbers."
									},
									"response": [
										{
											"name": "Key object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tyk/org/keys/:keyID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"org",
														"keys",
														":keyID"
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"tags\": [\n  \"Duis sit sed\",\n  \"et ut irure Ut\"\n ],\n \"access_rights\": {},\n \"alias\": \"eu\",\n \"allowance\": -62976828.2096649,\n \"apply_policies\": [\n  \"pariatur dolore\",\n  \"in ex deserunt\"\n ],\n \"apply_policy_id\": \"velit sit aliquip\",\n \"basic_auth_data\": {\n  \"hash_type\": \"deserunt reprehenderit\",\n  \"password\": \"occaecat consectetur velit\"\n },\n \"certificate\": \"qui velit mollit\",\n \"data_expires\": -55286428,\n \"enable_detail_recording\": false,\n \"expires\": -22417340,\n \"hmac_enabled\": false,\n \"hmac_string\": \"dolore ex dolor do\",\n \"id_extractor_deadline\": -60627557,\n \"is_inactive\": false,\n \"jwt_data\": {\n  \"secret\": \"ut irure\"\n },\n \"last_check\": -15452414,\n \"last_updated\": \"aute aliqua\",\n \"meta_data\": {},\n \"monitor\": {\n  \"trigger_limits\": [\n   24797270.69965589,\n   -25970524.885966435\n  ]\n },\n \"oauth_client_id\": \"laboris\",\n \"oauth_keys\": {},\n \"org_id\": \"pariatur consectetur do anim\",\n \"per\": -8442798.427376807,\n \"quota_max\": -2448329,\n \"quota_remaining\": 42345722,\n \"quota_renewal_rate\": 19882497,\n \"quota_renews\": -70527350,\n \"rate\": -90914478.78872137,\n \"session_lifetime\": 3785199,\n \"throttle_interval\": -28568191.80049461,\n \"throttle_retry_limit\": -95275424\n}"
										}
									]
								},
								{
									"name": "Create an organisation key",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/org/keys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"org",
												"keys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "quis Duis",
													"description": "(Required) The Key ID"
												}
											]
										},
										"description": "This work similar to Keys API except that Key ID is always equals Organisation ID"
									},
									"response": [
										{
											"name": "New Key added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/org/keys/:keyID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"org",
														"keys",
														":keyID"
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"created\",\n \"key\": \"{...KEY JSON definition...}\",\n \"status\": \"ok\"\n}"
										}
									]
								},
								{
									"name": "Update Organisation Key",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tyk/org/keys/:keyID?reset_quota=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"org",
												"keys",
												":keyID"
											],
											"query": [
												{
													"key": "reset_quota",
													"value": "1",
													"description": "Adding the `reset_quota` parameter and setting it to 1, will cause Tyk reset the organisations quota in the live quota manager, it is recommended to use this mechanism to reset organisation-level access if a monthly subscription is in place."
												}
											],
											"variable": [
												{
													"key": "keyID",
													"value": "quis Duis",
													"description": "(Required) The Key ID"
												}
											]
										},
										"description": "This work similar to Keys API except that Key ID is always equals Organisation ID\n\nFor Gateway v2.6.0 onwards, you can now set rate limits at the organisation level by using the following fields - allowance and rate. These are the number of allowed requests for the specified per value, and need to be set to the same value. If you donÂ¿Ã¯t want to have organisation level rate limiting, set `rate` or `per` to zero, or donÂ¿Ã¯t add them to your request."
									},
									"response": [
										{
											"name": "Key updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quota_max\": 60,\n    \"quota_renews\": 1406121006,\n    \"quota_renewal_rate\": 60,\n    \"allowance\": 100,\n    \"rate\": 100,\n    \"per\": 5,\n    \"org_id\": \"53ac07777cbb8c2d53000002\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tyk/org/keys/:keyID?reset_quota=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"org",
														"keys",
														":keyID"
													],
													"query": [
														{
															"key": "reset_quota",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"updated\",\n \"status\": \"ok\"\n}"
										}
									]
								},
								{
									"name": "Delete Organisation Key",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tyk/org/keys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"org",
												"keys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "quis Duis",
													"description": "(Required) The Key ID"
												}
											]
										},
										"description": "Deleting a key will remove all limits from organisation. It does not affects regualar keys created within organisation."
									},
									"response": [
										{
											"name": "Key deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Tyk-Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tyk/org/keys/:keyID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tyk",
														"org",
														"keys",
														":keyID"
													],
													"variable": [
														{
															"key": "keyID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"Key deleted\",\n \"status\": \"ok\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Organisation Keys",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tyk/org/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"org",
										"keys"
									]
								},
								"description": "You can now set rate limits at the organisation level by using the following fields - allowance and rate. These are the number of allowed requests for the specified per value, and need to be set to the same value. If you don't want to have organisation level rate limiting, set 'rate' or 'per' to zero, or don't add them to your request."
							},
							"response": [
								{
									"name": "List of all API keys",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Tyk-Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tyk/org/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tyk",
												"org",
												"keys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"keys\": [\n  \"key1\",\n  \"key2\"\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Invalidate cache",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tyk/cache/:apiID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tyk",
								"cache",
								":apiID"
							],
							"variable": [
								{
									"key": "apiID",
									"value": "quis Duis",
									"description": "(Required) The API ID"
								}
							]
						},
						"description": "Invalidate cache for given API"
					},
					"response": [
						{
							"name": "Invalidate cache",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Tyk-Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tyk/cache/:apiID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"cache",
										":apiID"
									],
									"variable": [
										{
											"key": "apiID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"cache invalidated\",\n \"status\": \"ok\"\n}"
						}
					]
				},
				{
					"name": "Check the Health of the Gateway",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tyk/hello",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tyk",
								"hello"
							]
						},
						"description": "From v2.7.5 you can now rename the `/hello`  endpoint by using the `health_check_endpoint_name` option\n\nReturns 200 response in case of success\n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Tyk-Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tyk/hello",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										"hello"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "Hello Tiki"
						}
					]
				},
				{
					"name": "Check the Health of the API",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tyk/:listenPath/hello",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tyk",
								":listenPath",
								"hello"
							],
							"variable": [
								{
									"key": "listenPath",
									"value": "quis Duis",
									"description": "(Required) Listen path of loaded API"
								}
							]
						},
						"description": "Should point to API domain if it has own"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Tyk-Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tyk/:listenPath/hello",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tyk",
										":listenPath",
										"hello"
									],
									"variable": [
										{
											"key": "listenPath"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "Hello Tiki"
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "key",
						"value": "x-tyk-authorization",
						"type": "string"
					},
					{
						"key": "value",
						"value": "28d220fd77974a4facfb07dc1e49c2aa",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Run batch request",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/:listen_path/tyk/batch",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						":listen_path",
						"tyk",
						"batch"
					],
					"variable": [
						{
							"key": "listen_path",
							"value": "quis Duis",
							"description": "(Required) API listen path"
						}
					]
				}
			},
			"response": [
				{
					"name": "apiStatusMessage represents an API status message",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-Tyk-Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/:listen_path/tyk/batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								":listen_path",
								"tyk",
								"batch"
							],
							"variable": [
								{
									"key": "listen_path"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-Tyk-Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "<API Key>",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "X-Tyk-Authorization",
			"value": "28d220fd77974a4facfb07dc1e49c2aa"
		}
	]
}