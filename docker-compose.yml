version: "3.7"

networks:
  tyk:

services:
  tyk-gateway:
    image: docker.tyk.io/tyk-gateway/tyk-gateway:v3.2.1
    ports:
      - 8080:8080
    networks:
      - tyk
    volumes:
      - ./tyk-gateway-docker/tyk-gateway-docker/tyk.standalone.conf:/opt/tyk-gateway/tyk.conf
      - ./tyk-gateway-docker/tyk-gateway-docker/apps:/opt/tyk-gateway/apps
      - ./tyk-gateway-docker/tyk-gateway-docker/middleware:/opt/tyk-gateway/middleware
      - ./tyk-gateway-docker/tyk-gateway-docker/certs:/opt/tyk-gateway/certs
      - policies:/opt/tyk-gateway/policies
    environment:
      - TYK_GW_SECRET=foo
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - tyk-redis

  tyk-redis:
    image: redis:5.0-alpine
    networks:
      - tyk
    ports:
      - 6379:6379
    volumes:
        - redis_data:/data

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5430:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - tyk

  applicationgateway.api:
    image: ${DOCKER_REGISTRY-}applicationgatewayapi
    build:
      context: .
      dockerfile: src/API/ApplicationGateway.Api/Dockerfile
    hostname: webapi
    volumes:
      - policies:/opt/tyk-gateway/policies
    environment:
      - ConnectionStrings:ApplicationConnectionString=Host=postgres;Port=5432;Username=root;Password=root;Database=ApplicationGateway.ApplicationDb;
      - ConnectionStrings:IdentityConnectionString=Host=postgres;Port=5432;Username=root;Password=root;Database=ApplicationGateway.IdentityDb;
      - ConnectionStrings:HealthCheckConnectionString=Host=postgres;Port=5432;Username=root;Password=root;Database=ApplicationGateway.HealthCheckDb;
      - ConnectionStrings:Redis=tyk-redis:6379
      - TykConfiguration:Host=http://tyk-gateway:8080/
      - TykConfiguration:PoliciesFolderPath=../opt/tyk-gateway/policies
    ports:
      - "5500:80"
    networks:
      - tyk
    depends_on:
      - tyk-gateway
      - tyk-redis
      - postgres
      - applicationgateway.worker

  applicationgateway.worker:
    image: ${DOCKER_REGISTRY-}applicationgatewayworker
    build:
      context: .
      dockerfile: src/Infrastructure/ApplicationGateway.Worker/Dockerfile
    volumes:
      - policies:/opt/tyk-gateway/policies
    environment:
      - ConnectionStrings:Redis=tyk-redis:6379
      - TykConfiguration:Host=http://tyk-gateway:8080/
      - TykConfiguration:PoliciesFolderPath=../opt/tyk-gateway/policies
    networks:
      - tyk
    depends_on:
      - tyk-gateway
      - tyk-redis


volumes:
  policies:
  pgdata:
  redis_data: