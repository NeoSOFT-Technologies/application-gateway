version: "3.7"

networks:
  tyk:
    driver: bridge
  es:
    driver: bridge

services:
  tyk-gateway:
    image: docker.tyk.io/tyk-gateway/tyk-gateway:v3.2.1
    ports:
      - 3004:8080
    networks:
      - tyk
    volumes:
      - ./tyk-gateway-docker/tyk-gateway-docker/tyk.standalone.conf:/opt/tyk-gateway/tyk.conf
      - ./tyk-gateway-docker/tyk-gateway-docker/apps:/opt/tyk-gateway/apps
      - ./tyk-gateway-docker/tyk-gateway-docker/middleware:/opt/tyk-gateway/middleware
      - ./tyk-gateway-docker/tyk-gateway-docker/certs:/opt/tyk-gateway/certs
      - ./tyk-gateway-docker/tyk-gateway-docker/serverCerts:/opt/tyk-gateway/serverCerts
      - ./tyk-gateway-docker/tyk-gateway-docker/policies:/opt/tyk-gateway/policies
    environment:
      - TYK_GW_SECRET=foo
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - tyk-redis

  tyk-redis:
    image: redis:5.0-alpine
    networks:
      - tyk
    ports:
      - 6379:6379
    volumes:
        - redis_data:/data

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5430:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - tyk

  downstreamapi1:
    image: ${DOCKER_REGISTRY-}downstreamapi
    build:
      context: .
      dockerfile: Downstream/DownstreamApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5000:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  downstreamapi2:
    image: ${DOCKER_REGISTRY-}downstreamapi
    build:
      context: .
      dockerfile: Downstream/DownstreamApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5001:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  # applicationgateway.api:
  #   image: ${DOCKER_REGISTRY-}applicationgatewayapi
  #   build:
  #     context: .
  #     dockerfile: src/API/ApplicationGateway.Api/Dockerfile
  #   volumes:
  #     - ./tyk-gateway-docker/tyk-gateway-docker/policies:/opt/tyk-gateway/policies
  #     - ./tyk-gateway-docker/tyk-gateway-docker/certs:/opt/tyk-gateway/certs
  #     - ./tyk-gateway-docker/tyk-gateway-docker/serverCerts:/etc/ssl/certs
  #   environment:
  #     - ConnectionStrings:ApplicationConnectionString=Host=postgres;Port=5432;Username=root;Password=root;Database=ApplicationGateway.ApplicationDb;
  #     - ConnectionStrings:IdentityConnectionString=Host=postgres;Port=5432;Username=root;Password=root;Database=ApplicationGateway.IdentityDb;
  #     - ConnectionStrings:HealthCheckConnectionString=Host=postgres;Port=5432;Username=root;Password=root;Database=ApplicationGateway.HealthCheckDb;
  #     - ConnectionStrings:Redis=tyk-redis:6379
  #     - TykConfiguration:Host=http://tyk-gateway:8080/
  #     - TykConfiguration:PoliciesFolderPath=../opt/tyk-gateway/policies
  #     - TykConfiguration:CertsPath=../opt/tyk-gateway/certs   
  #   ports:
  #     - "5500:80"
  #   networks:
  #     - tyk
  #     - es
  #   depends_on:
  #     - tyk-gateway
  #     - tyk-redis
  #     - postgres
  #     - applicationgateway.worker

  applicationgateway.worker:
    image: ${DOCKER_REGISTRY-}applicationgatewayworker
    build:
      context: .
      dockerfile: src/Infrastructure/ApplicationGateway.Worker/Dockerfile
    volumes:
      - ./tyk-gateway-docker/tyk-gateway-docker/policies:/opt/tyk-gateway/policies
    environment:
      - ConnectionStrings:Redis=tyk-redis:6379
      - TykConfiguration:Host=http://tyk-gateway:8080/
      - TykConfiguration:PoliciesFolderPath=../opt/tyk-gateway/policies
    networks:
      - tyk
    depends_on:
      - tyk-gateway
      - tyk-redis
  
  # Below Services are temporarily commented because they are currently not in use

  # tyk-pump:
  #   image: tykio/tyk-pump-docker-pub:v0.8.4
  #   volumes:
  #     - ./tyk-gateway-docker/tyk-gateway-docker/pump/pump.json:/opt/tyk-pump/pump.conf
  #   depends_on:
  #     - tyk-redis
  #     - elasticsearch
  #   networks:
  #     - tyk
  #     - es

  # elasticsearch:
  #   image: elasticsearch:7.17.2
  #   ports:
  #     - 9200:9200
  #   environment:
  #     - xpack.security.enabled=false
  #     - discovery.type=single-node
  #   volumes:
  #     - elasticsearch-data:/usr/share/elasticsearch/data
  #   networks:
  #     - es
  
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.17.2
  #   ports:
  #     - 5601:5601
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://host.docker.internal:9200
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - es

volumes:
  policies:
  certs:
  pgdata:
  redis_data:
  # elasticsearch-data:
  #   driver: local